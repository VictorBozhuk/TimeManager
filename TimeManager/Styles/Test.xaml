<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <!--  Button  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root">
                        <Border
                            x:Name="DisabledElement"
                            Background="{StaticResource DisabledBrush}"
                            CornerRadius="2"
                            Opacity="0">
                            <Border
                                BorderBrush="{StaticResource DisabledBorderBrush}"
                                BorderThickness="0,0,1,1"
                                CornerRadius="2" />
                        </Border>
                        <Border
                            x:Name="NormalElement"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2" />
                        <Border
                            x:Name="MouseOverElement"
                            Background="{StaticResource ControlBackgroundOver}"
                            BorderBrush="{StaticResource ControlActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Opacity="0" />
                        <Border
                            x:Name="PressedElement"
                            Background="{StaticResource ControlBackgroundPressed}"
                            BorderBrush="{StaticResource ControlActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="ContentHost"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.4" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PressedElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="0.25"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PressedElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="ContentHost"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="#32ebfb" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="DisabledElement"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentHost"
                                            Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                            To="0.75"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="ContentHost"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource DisabledForeground}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  TextBox  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundControls}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Height" Value="25" />
    </Style>

    <!--  TextBox with WaterMark  -->
    <Style x:Key="WaterMarkStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundControls}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border 
							Background="{StaticResource BackgroundControls}" 
							BorderBrush="{StaticResource ControlBorderBrush}" 
							BorderThickness="1"
							/>
                        <Label 
							Margin="5,0,0,0" 
							x:Name="WaterMarkLabel" 
							Content="{TemplateBinding Tag}" 
							VerticalAlignment="Center"
							Visibility="Collapsed" 
							Foreground="Gray" 
							FontFamily="Arial"
							/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition 
											Property="Text" 
											Value=""
											/>
                            </MultiTrigger.Conditions>
                            <Setter 
										Property="Visibility" 
										TargetName="WaterMarkLabel" 
										Value="Visible"
										/>
                        </MultiTrigger>
                        <Trigger 
									Property="IsEnabled" 
									Value="False"
									>
                            <Setter 
										Property="Foreground" 
										Value="DimGray"
										/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Expander  -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation
                                Storyboard.TargetName="Content"
                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource ColorForeground}"
                                Duration="0:0:0.3" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation
                                Storyboard.TargetName="Content"
                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource ColorForegroundWhite}"
                                Duration="0:0:0.3" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        BorderThickness="0">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Check"
                                Background="Transparent"
                                BorderThickness="0"
                                RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse
                                        x:Name="ellipse"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Stroke="{StaticResource ControlActiveBorderBrush}"
                                        StrokeThickness="2" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0 0 L 4 4 L 8 0 Z"
                                        Fill="{StaticResource ControlForeground}" />
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0" />
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter
                                x:Name="Content"
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation
                                            Storyboard.TargetName="rotate"
                                            From="0"
                                            To="180"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation
                                            Storyboard.TargetName="rotate"
                                            From="180"
                                            To="360"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton
                                x:Name="ToggleButtonExpander"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1,1,1,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource FocusLine}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <Grid
                                x:Name="grid"
                                Margin="5,0,0,0"
                                Visibility="Collapsed">
                                <Border
                                    x:Name="border"
                                    Margin="0"
                                    Background="{StaticResource ControlLightBackground}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5" />
                                <ContentPresenter
                                    x:Name="ContentExpander"
                                    Margin="5"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    DockPanel.Dock="Bottom"
                                    Focusable="False" />
                                <Grid.OpacityMask>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Black" />
                                        <GradientStop x:Name="grstop_opacity" Offset="0.05" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Grid.OpacityMask>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation
                                            From="0.05"
                                            To="3"
                                            Duration="0:0:1.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.5" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation
                                            From="3"
                                            To="0.05"
                                            Duration="0:0:1.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.5" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="grid" Property="Margin" Value="1,0,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderRight}" />
                            <Setter TargetName="grid" Property="Margin" Value="0,1,0,1" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderBottom}" />
                            <Setter TargetName="grid" Property="Margin" Value="1,0,1,0" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderLeft}" />
                            <Setter TargetName="grid" Property="Margin" Value="0,1,0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Calendar  -->
    <Style TargetType="{x:Type Calendar}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                x:Name="txt"
                                Margin="0,4,0,4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Verdana"
                                FontSize="9.5"
                                FontWeight="Bold"
                                Foreground="{StaticResource ControlForeground}"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Border
                            Margin="0,2,0,2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <Border
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                BorderThickness="2"
                                CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Background="Transparent" Cursor="Hand">
                                                <Path
                                                    x:Name="path"
                                                    Width="6"
                                                    Height="10"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                    Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource ColorForegroundWhite}" />
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="{StaticResource BorderBrushGradientColor2}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="{StaticResource ColorForegroundWhite}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="path" Property="Fill" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Path
                                                    x:Name="path"
                                                    Width="6"
                                                    Height="10"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                    Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource ColorForegroundWhite}" />
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="{StaticResource BorderBrushGradientColor2}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="{StaticResource ColorForegroundWhite}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="path" Property="Fill" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Background="Transparent" Cursor="Hand">
                                                <ContentControl
                                                    x:Name="buttonContent"
                                                    Margin="10,3,10,3"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Foreground="{StaticResource ControlForegroundWhite}"
                                                    IsTabStop="False" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                    To="{StaticResource ColorForeground}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                    To="{StaticResource ColorForegroundWhite}"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="buttonContent" Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Width="25"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="10.5"
                                        FontWeight="Bold"
                                        Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Width="25"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" />
                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,3,6,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,3,7,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Margin="0,2,0,2"
                            Fill="{StaticResource DisabledBrush}"
                            Opacity="0.6"
                            RadiusX="2"
                            RadiusY="2"
                            Stretch="Fill"
                            StrokeThickness="0"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="Background" Value="{StaticResource HoverBackgroundCalendar}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlActiveBorderBrush}" />
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlBorderBrush}" />
                        <ContentControl
                            x:Name="NormalText"
                            Margin="1,0,1,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            FontSize="{TemplateBinding FontSize}"
                            IsTabStop="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FFCCCCCC" />
                            </ContentControl.Foreground>
                        </ContentControl>
                        <Rectangle
                            x:Name="CalendarButtonFocusVisual"
                            IsHitTestVisible="False"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlActiveBorderBrush}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource ColorForeground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF777777" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Background" Value="{StaticResource HoverBackgroundCalendar}" />
        <Setter Property="Foreground" Value="Lime" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <Rectangle
                            x:Name="TodayBackground"
                            Fill="{StaticResource TodayBackgroundBrush}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlBorderBrush}" />
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlBorderBrush}" />
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlBorderBrush}" />
                        <ContentControl
                            x:Name="NormalText"
                            Margin="5,0,5,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            FontSize="{TemplateBinding FontSize}"
                            IsTabStop="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FFCCCDDD" />
                            </ContentControl.Foreground>
                        </ContentControl>
                        <Path
                            x:Name="Blackout"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                            Fill="{StaticResource ControlForeground}"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill" />
                        <Rectangle
                            x:Name="DayButtonFocusVisual"
                            IsHitTestVisible="False"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="{StaticResource ControlForegroundWhite}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.45" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".35" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".75" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource ColorForeground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF777777" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="TodayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Blackout"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DatePicker  -->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type Calendar}}" TargetType="{x:Type Calendar}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid
                        x:Name="PART_Root"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <Grid
                                        Width="19"
                                        Height="18"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="#11FFFFFF"
                                        FlowDirection="LeftToRight">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                        </Grid.RowDefinitions>
                                        <Border
                                            x:Name="Background"
                                            Grid.Row="1"
                                            Grid.RowSpan="3"
                                            Grid.ColumnSpan="4"
                                            Margin="0"
                                            Background="{StaticResource ControlBackgroundNormal}"
                                            CornerRadius=".5"
                                            Opacity="1" />
                                        <Border
                                            x:Name="HoverBorder"
                                            Grid.RowSpan="4"
                                            Grid.ColumnSpan="4"
                                            Background="{StaticResource HoverBackgroundCalendar}"
                                            BorderBrush="{x:Null}"
                                            BorderThickness="1"
                                            CornerRadius="0,0,1,1"
                                            Opacity="0" />
                                        <Rectangle
                                            Grid.RowSpan="1"
                                            Grid.ColumnSpan="4"
                                            Fill="{StaticResource ControlLightBackground}"
                                            StrokeThickness="1" />
                                        <Path
                                            Grid.Row="1"
                                            Grid.RowSpan="3"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="4"
                                            Margin="4,3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                            Fill="{StaticResource ControlForeground}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Fill" />
                                        <Ellipse
                                            Grid.ColumnSpan="4"
                                            Width="3"
                                            Height="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="{StaticResource ControlForegroundWhite}"
                                            StrokeThickness="0" />
                                        <Border
                                            x:Name="DisabledVisual"
                                            Grid.Row="0"
                                            Grid.RowSpan="4"
                                            Grid.ColumnSpan="4"
                                            Background="{StaticResource DisabledBrush}"
                                            BorderBrush="{StaticResource DisabledBorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="0,0,.5,.5"
                                            Opacity="0" />
                                    </Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0" />
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                <VisualTransition
                                                    GeneratedDuration="00:00:00.3000000"
                                                    From="Normal"
                                                    To="MouseOver" />
                                                <VisualTransition
                                                    GeneratedDuration="00:00:00.5000000"
                                                    From="MouseOver"
                                                    To="Normal" />
                                                <VisualTransition
                                                    GeneratedDuration="00:00:00.5000000"
                                                    From="Pressed"
                                                    To="MouseOver" />
                                                <VisualTransition
                                                    GeneratedDuration="00:00:00.3000000"
                                                    From="MouseOver"
                                                    To="Pressed" />
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames
                                                        BeginTime="00:00:00"
                                                        Storyboard.TargetName="HoverBorder"
                                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                                        Duration="00:00:00.0010000">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames
                                                        BeginTime="00:00:00"
                                                        Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                                        Duration="00:00:00.0010000">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames
                                                        BeginTime="00:00:00"
                                                        Storyboard.TargetName="DisabledVisual"
                                                        Storyboard.TargetProperty="(UIElement.Opacity)"
                                                        Duration="00:00:00.0010000">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.65" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            x:Name="PART_Button"
                            Grid.Row="0"
                            Grid.Column="1"
                            Width="20"
                            Margin="3,0,3,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Focusable="False"
                            Foreground="{TemplateBinding Foreground}"
                            Template="{StaticResource DropDownButtonTemplate}" />
                        <DatePickerTextBox
                            x:Name="PART_TextBox"
                            Grid.Row="0"
                            Grid.Column="0"
                            Height="{TemplateBinding Height}"
                            VerticalContentAlignment="Center" />
                        <Grid
                            x:Name="PART_DisabledVisual"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle
                                Grid.Row="0"
                                Grid.Column="0"
                                Fill="#a6FFFFFF"
                                RadiusX="1"
                                RadiusY="1" />
                            <Rectangle
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="19"
                                Height="18"
                                Margin="3,0,3,0"
                                Fill="#a6FFFFFF"
                                RadiusX="1"
                                RadiusY="1" />
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=PART_TextBox}"
                                StaysOpen="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Opacity="1">
                            <Grid>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush x:Name="MouseOverColor" Color="Transparent" />
                                    </Border.BorderBrush>
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        Margin="0"
                                        Background="{TemplateBinding Background}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Text" Value="--/--/--" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBox -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontFamily" Value="Calibri,Arial" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="6,3,32,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="6,3,32,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            Margin="3,-8,-3,8"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Margin="0,3,0,3"
                                    Background="{StaticResource ControlLightBackground}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3" />
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.72" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True" />
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="(ComboBoxItem.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.3" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource HighlightComboBoxItem1}"
                                Duration="0:0:0" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource HighlightComboBoxItem2}"
                                Duration="0:0:0" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="(ComboBoxItem.Foreground).(SolidColorBrush.Color)"
                                To="#FFEEEFFF"
                                Duration="0:0:0.3" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="Transparent"
                                Duration="0:0:0" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="Transparent"
                                Duration="0:0:0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        Name="Border"
                        Padding="2"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="1" Color="Transparent" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor1}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowDown"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowDown"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowUp"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowUp"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource BorderBrushGradientColor2}"
                                Duration="0:0:0.4" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource BorderBrushSolidColor}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource BorderBrushSolidColor}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowDown"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource ArrowBrushComboBox}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowDown"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource ArrowBrushComboBox}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowUp"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                To="{StaticResource ArrowBrushComboBox}"
                                Duration="0:0:0.4" />
                            <ColorAnimation
                                Storyboard.TargetName="ArrowUp"
                                Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                To="{StaticResource ArrowBrushComboBox}"
                                Duration="0:0:0.4" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        Grid.ColumnSpan="2"
                        BorderBrush="{Binding BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"
                        BorderThickness="{Binding BorderThickness, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"
                        CornerRadius="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource ControlBackgroundNormal}"
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="0" />
                            <Border
                                x:Name="BorderToggle"
                                Grid.Column="0"
                                Margin="1"
                                Background="{Binding Background, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                BorderThickness="0,0,1,0"
                                CornerRadius="3,0,0,3" />
                            <Grid Grid.Column="1">
                                <Path
                                    x:Name="ArrowDown"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M -2 0 L 2 4 L 6 0 Z">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0.204" Color="{StaticResource ArrowBrushComboBox}" />
                                            <GradientStop Offset="0.864" Color="{StaticResource ArrowBrushComboBox}" />
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                                <Path
                                    x:Name="ArrowUp"
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M -2 4 L 2 0 L 6 4 Z">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0.204" Color="{StaticResource ArrowBrushComboBox}" />
                                            <GradientStop Offset="0.864" Color="{StaticResource ArrowBrushComboBox}" />
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowDown" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowUp" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ListBox  -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource NormalBackgroundTabControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer>
                            <ItemsPresenter Margin="0" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListWithHeaders" TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource NormalBackgroundTabControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource ColorForeground}"
                                Duration="0:0:0.3" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation
                                Storyboard.TargetName="content"
                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource ColorForegroundWhite}"
                                Duration="0:0:0.3" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation
                                Storyboard.TargetName="selected_bg"
                                Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                To="1"
                                Duration="0:0:0.3" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation
                                Storyboard.TargetName="selected_bg"
                                Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                To="0"
                                Duration="0:0:0.3" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="grid"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="bg"
                            Fill="Transparent"
                            IsHitTestVisible="False" />
                        <Rectangle
                            x:Name="selected_bg"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            x:Name="content"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBlock  -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="FontSize" Value="16" />
    </Style>

</ResourceDictionary>